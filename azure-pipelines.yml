# File for Azure Piplelines CI Builds
    
jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
   osName: Linux
  strategy:
    matrix:
      Java 8:
        java.version: '1.8'
      # Java 10:
      #   java.version: '1.10'
  steps:
  # Build using a Gradle wrapper script
  - task: Gradle@2
    displayName: Build/Test
    inputs:
      gradleWrapperFile: 'jhdf/gradlew'
      workingDirectory: jhdf
      tasks: 'clean build jacocoTestReport' 
      publishJUnitResults: true 
      testResultsFiles: 'jhdf/build/test-results/test/TEST-*.xml'
      testRunTitle: $(osName) $(Agent.JobName)
      #codeCoverageToolOption: 'jaCoCo'
      #codeCoverageClassFilesDirectories: 'build/classes/main/'
      jdkVersionOption: $(java.version)
  - script: 'cd jhdf;
    ./gradlew sonarqube
    -Dsonar.projectKey=jamesmudd_jhdf
    -Dsonar.organization=jamesmudd-github
    -Dsonar.host.url=https://sonarcloud.io
    -Dsonar.login=$(sonar.login)'
    displayName: SonarQube

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  variables:
   osName: Windows
  strategy:
    matrix:
      Java 8:
        java.version: '1.8'
      Java 10:
        java.version: '1.10'
  steps:
  # Build using a Gradle wrapper script
  - task: Gradle@2
    displayName: Build/Test
    inputs:
      gradleWrapperFile: 'jhdf/gradlew'
      workingDirectory: jhdf
      tasks: 'build' 
      publishJUnitResults: true 
      testResultsFiles: 'jhdf/build/test-results/test/TEST-*.xml'
      testRunTitle: $(osName) $(Agent.JobName)
      #codeCoverageToolOption: 'jaCoCo'
      #codeCoverageClassFilesDirectories: 'build/classes/main/'
      jdkVersionOption: $(java.version)
